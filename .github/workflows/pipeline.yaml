name: pipeline

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: Setup Go environment
        uses: actions/setup-go@v3.3.1
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
          cache: true

      - name: release
        if: github.ref == 'refs/heads/main'
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
          GOOS: wasip1
          GOARCH: wasm
        run: |
          go build -o ./atc_backend_v1_flight.wasm ./atc/backend/v1/flight
          go build -o ./atc_backend_v2_flight.wasm ./atc/backend/v2/flight
          go build -o ./atc_backend_converter.wasm ./atc/backend/converter
          go build -o ./atc_backend_airway.wasm ./atc/backend/airway
          go build -o ./atc_backend_airway_v2.wasm ./atc/backend/airwayv2

          gzip atc_backend_v1_flight.wasm
          gzip atc_backend_v2_flight.wasm
          gzip atc_backend_airway.wasm
          gzip atc_backend_airway_v2.wasm
          gzip atc_backend_converter.wasm

          if [[ $(gh release list --json tagName -q 'any(.[]; .tagName == "latest")') != 'true' ]]; then
            gh release create latest ./atc_backend_v1_flight.wasm.gz ./atc_backend_airway.wasm.gz
          else
            gh release upload latest --clobber \
              ./atc_backend_v1_flight.wasm.gz \
              ./atc_backend_v2_flight.wasm.gz \
              ./atc_backend_converter.wasm.gz \
              ./atc_backend_airway.wasm.gz  \
              ./atc_backend_airway_v2.wasm.gz 
          fi

          git tag -f latest
          git push --tags -f
